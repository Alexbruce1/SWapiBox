// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Card Should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Card
    person={
      Object {
        "Homeworld": "stewjon",
        "Name": "Luke",
        "Species": "Human",
        "population": "2",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="card-title"
        >
          <h2
            className="card-name"
          >
            Luke
          </h2>
        </div>,
        <p
          className="card-species"
        >
          Human
        </p>,
        <p
          className="card-home"
        >
          <strong>
            Home World:
          </strong>
          stewjon
        </p>,
        <p
          className="card-population"
        >
          <strong>
            Population:
          </strong>
          2
        </p>,
        <button
          className="favorite-button"
        >
          Add To Favorites
        </button>,
      ],
      "className": "card",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <h2
            className="card-name"
          >
            Luke
          </h2>,
          "className": "card-title",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Luke",
            "className": "card-name",
          },
          "ref": null,
          "rendered": "Luke",
          "type": "h2",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Human",
          "className": "card-species",
        },
        "ref": null,
        "rendered": "Human",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <strong>
              Home World:
            </strong>,
            "stewjon",
          ],
          "className": "card-home",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Home World:",
            },
            "ref": null,
            "rendered": "Home World:",
            "type": "strong",
          },
          "stewjon",
        ],
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <strong>
              Population:
            </strong>,
            "2",
          ],
          "className": "card-population",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Population:",
            },
            "ref": null,
            "rendered": "Population:",
            "type": "strong",
          },
          "2",
        ],
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Add To Favorites",
          "className": "favorite-button",
        },
        "ref": null,
        "rendered": "Add To Favorites",
        "type": "button",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="card-title"
          >
            <h2
              className="card-name"
            >
              Luke
            </h2>
          </div>,
          <p
            className="card-species"
          >
            Human
          </p>,
          <p
            className="card-home"
          >
            <strong>
              Home World:
            </strong>
            stewjon
          </p>,
          <p
            className="card-population"
          >
            <strong>
              Population:
            </strong>
            2
          </p>,
          <button
            className="favorite-button"
          >
            Add To Favorites
          </button>,
        ],
        "className": "card",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <h2
              className="card-name"
            >
              Luke
            </h2>,
            "className": "card-title",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Luke",
              "className": "card-name",
            },
            "ref": null,
            "rendered": "Luke",
            "type": "h2",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Human",
            "className": "card-species",
          },
          "ref": null,
          "rendered": "Human",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <strong>
                Home World:
              </strong>,
              "stewjon",
            ],
            "className": "card-home",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Home World:",
              },
              "ref": null,
              "rendered": "Home World:",
              "type": "strong",
            },
            "stewjon",
          ],
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <strong>
                Population:
              </strong>,
              "2",
            ],
            "className": "card-population",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Population:",
              },
              "ref": null,
              "rendered": "Population:",
              "type": "strong",
            },
            "2",
          ],
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Add To Favorites",
            "className": "favorite-button",
          },
          "ref": null,
          "rendered": "Add To Favorites",
          "type": "button",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
